---
- name: ECS Container Deployment via CodeBuild
  hosts: localhost
  gather_facts: false
  vars:
    env_name: dev
    codebuild_project_name: "{{ env_name }}-comment-collector-build"
    ecr_repository_name: "{{ env_name }}-comment-collector"
    aws_region: ap-northeast-1
    
  tasks:
    - name: 🐳 Starting ECS Container Deployment
      debug:
        msg: |
          ╔══════════════════════════════════════════════════════════════╗
          ║                    ECS Container                             ║
          ║                     Deployment                               ║
          ║                   (CodeBuild Integration)                    ║
          ╚══════════════════════════════════════════════════════════════╝

    - name: Check CodeBuild project exists
      shell: aws codebuild batch-get-projects --names {{ codebuild_project_name }} --region {{ aws_region }}
      register: codebuild_check
      changed_when: false

    - name: Parse CodeBuild project info
      set_fact:
        codebuild_projects: "{{ (codebuild_check.stdout | from_json).projects }}"

    - name: Verify CodeBuild project exists
      fail:
        msg: "❌ CodeBuild project {{ codebuild_project_name }} not found"
      when: codebuild_projects | length == 0

    - name: Display CodeBuild project info
      debug:
        msg: |
          ✅ CodeBuild Project: {{ codebuild_project_name }}
          📍 Source: {{ codebuild_projects[0].source.location }}
          🔧 Buildspec: {{ codebuild_projects[0].source.buildspec }}
          🏗️ Environment: {{ codebuild_projects[0].environment.image }}

    - name: Start CodeBuild for container deployment
      shell: aws codebuild start-build --project-name {{ codebuild_project_name }} --source-version main --region {{ aws_region }}
      register: build_start
      changed_when: true

    - name: Parse build start result
      set_fact:
        build_info: "{{ (build_start.stdout | from_json).build }}"

    - name: Display build started
      debug:
        msg: |
          🚀 CodeBuild Started
          📋 Build ID: {{ build_info.id }}
          ⏰ Start Time: {{ build_info.startTime }}
          📊 Status: {{ build_info.buildStatus }}
          🔗 Build URL: https://console.aws.amazon.com/codesuite/codebuild/projects/{{ codebuild_project_name }}/build/{{ build_info.id }}/log

    - name: Wait for build completion
      shell: aws codebuild batch-get-builds --ids {{ build_info.id }} --region {{ aws_region }}
      register: build_status_check
      until: (build_status_check.stdout | from_json).builds[0].buildStatus in ['SUCCEEDED', 'FAILED', 'FAULT', 'STOPPED', 'TIMED_OUT']
      retries: 30
      delay: 30
      changed_when: false

    - name: Parse final build status
      set_fact:
        final_build: "{{ (build_status_check.stdout | from_json).builds[0] }}"

    - name: Calculate build duration
      set_fact:
        build_duration_seconds: "{{ (final_build.endTime | int) - (final_build.startTime | int) }}"
        build_duration_minutes: "{{ ((final_build.endTime | int) - (final_build.startTime | int)) // 60 }}"
      when: final_build.endTime is defined

    - name: Display build progress
      debug:
        msg: |
          📊 Build Status: {{ final_build.buildStatus }}
          ⏱️  Duration: {{ build_duration_minutes | default('In Progress') }} minutes ({{ build_duration_seconds | default('N/A') }} seconds)
          📝 Current Phase: {{ final_build.currentPhase | default('Unknown') }}
          🔍 Build Number: {{ final_build.buildNumber | default('N/A') }}

    - name: Verify build success
      fail:
        msg: |
          ❌ CodeBuild Failed
          Status: {{ final_build.buildStatus }}
          Phase: {{ final_build.currentPhase | default('Unknown') }}
          
          🔍 Check logs at:
          https://console.aws.amazon.com/codesuite/codebuild/projects/{{ codebuild_project_name }}/build/{{ build_info.id }}/log
          
          💡 Common issues:
          - GitHub repository access
          - buildspec.yml syntax
          - ECR permissions
          - Docker build errors
      when: final_build.buildStatus != 'SUCCEEDED'

    - name: Check ECR images after build
      shell: aws ecr list-images --repository-name {{ ecr_repository_name }} --region {{ aws_region }}
      register: ecr_images_check
      changed_when: false

    - name: Parse ECR images
      set_fact:
        ecr_images: "{{ (ecr_images_check.stdout | from_json).imageIds }}"

    - name: Get ECR repository URI
      shell: aws ecr describe-repositories --repository-names {{ ecr_repository_name }} --region {{ aws_region }}
      register: ecr_repo_info
      changed_when: false

    - name: Parse ECR repository info
      set_fact:
        ecr_repository_uri: "{{ (ecr_repo_info.stdout | from_json).repositories[0].repositoryUri }}"

    - name: Display ECR verification
      debug:
        msg: |
          ✅ ECR Repository: {{ ecr_repository_name }}
          📦 Images Count: {{ ecr_images | length }}
          🏷️  Available Tags: {{ ecr_images | selectattr('imageTag', 'defined') | map(attribute='imageTag') | list }}
          📍 Repository URI: {{ ecr_repository_uri }}

    - name: ✅ Container Deployment Completed
      debug:
        msg: |
          🎉 ECS Container Deployment Summary:
          ✅ CodeBuild Status: {{ final_build.buildStatus }}
          ✅ ECR Images: {{ ecr_images | length }} available
          ✅ Build Duration: {{ build_duration_minutes | default('N/A') }} minutes
          ✅ Build Number: {{ final_build.buildNumber | default('N/A') }}
          
          📊 Container Details:
          -----------------------------------------------------------------------------------
          Repository: {{ ecr_repository_name }}
          Latest Image: {{ ecr_repository_uri }}:latest
          Build ID: {{ build_info.id }}
          Commit Hash: {{ final_build.resolvedSourceVersion | default('N/A') }}
          
          🔗 Useful Links:
          CodeBuild Console: https://console.aws.amazon.com/codesuite/codebuild/projects/{{ codebuild_project_name }}
          ECR Console: https://console.aws.amazon.com/ecr/repositories/{{ ecr_repository_name }}
          ECS Console: https://console.aws.amazon.com/ecs/home#/clusters/{{ env_name }}-youtube-comment-collector
          Build Logs: https://console.aws.amazon.com/cloudwatch/home?region={{ aws_region }}#logsV2:log-groups/log-group/$252Faws$252Fcodebuild$252F{{ codebuild_project_name }}
          
          🚀 Next Steps:
          The container image is now available in ECR and ready for ECS deployment.
          ECS tasks will automatically use the latest image when started.
          
          💡 Manual ECS Task Launch (if needed):
          aws ecs run-task --cluster {{ env_name }}-youtube-comment-collector \
            --task-definition {{ env_name }}-comment-collector \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-xxx],securityGroups=[sg-xxx],assignPublicIp=ENABLED}"
