---
# Simplified Frontend Deployment Playbook
- name: Deploy React.js Frontend to S3
  hosts: localhost
  connection: local
  gather_facts: yes
  
  vars:
    # 固定値で設定
    env_name: "dev"
    project_root: "{{ playbook_dir }}/../.."
    frontend_path: "{{ project_root }}/src/frontend/youtube-chat-viewer"
    terraform_path: "{{ project_root }}/terraform/environments/dev"
    
  tasks:
    - name: Display deployment information
      debug:
        msg: |
          🚀 YouTube Live Chat Collector - Frontend Deployment
          Environment: {{ env_name }}
          Frontend Path: {{ frontend_path }}
          Terraform Path: {{ terraform_path }}

    - name: Check if frontend directory exists
      stat:
        path: "{{ frontend_path }}"
      register: frontend_dir
      
    - name: Fail if frontend directory not found
      fail:
        msg: "Frontend directory not found: {{ frontend_path }}"
      when: not frontend_dir.stat.exists

    - name: Check Node.js version
      command: node --version
      register: node_version_check
      changed_when: false
      failed_when: false
      
    - name: Display Node.js version
      debug:
        msg: "Node.js version: {{ node_version_check.stdout | default('Not available') }}"

    - name: Get Terraform outputs for S3 bucket information
      command: terraform output -json
      args:
        chdir: "{{ terraform_path }}"
      register: terraform_outputs
      changed_when: false

    - name: Parse Terraform outputs
      set_fact:
        s3_bucket_name: "{{ (terraform_outputs.stdout | from_json).frontend_bucket_name.value }}"
        frontend_url: "{{ (terraform_outputs.stdout | from_json).frontend_url.value }}"
        api_gateway_url: "{{ (terraform_outputs.stdout | from_json).api_gateway_url.value }}"
        api_key: "{{ (terraform_outputs.stdout | from_json).api_key.value }}"

    - name: Display S3 deployment information
      debug:
        msg: |
          📦 S3 Deployment Information:
          Bucket Name: {{ s3_bucket_name }}
          Frontend URL: {{ frontend_url }}
          API Gateway URL: {{ api_gateway_url }}

    - name: Update .env file with current Terraform outputs
      copy:
        content: |
          REACT_APP_API_BASE_URL={{ api_gateway_url }}
          REACT_APP_API_KEY={{ api_key }}
          REACT_APP_APP_NAME=YouTube Live Chat Collector
          REACT_APP_VERSION=1.0.0
          REACT_APP_ENVIRONMENT={{ env_name }}
          REACT_APP_DEBUG=true
          GENERATE_SOURCEMAP=false
        dest: "{{ frontend_path }}/.env"
        backup: yes

    - name: Display updated configuration
      debug:
        msg: |
          🔧 Configuration Updated:
          API Base URL: {{ api_gateway_url }}
          API Key: {{ api_key[:10] }}...
          Environment: {{ env_name }}

    - name: Clean previous build
      file:
        path: "{{ frontend_path }}/build"
        state: absent

    - name: Build React application with updated configuration
      command: npm run build
      args:
        chdir: "{{ frontend_path }}"
      register: build_result

    - name: Display build result
      debug:
        msg: "Build completed successfully with updated configuration"
      when: build_result.rc == 0

    - name: Sync build files to S3
      command: >
        aws s3 sync {{ frontend_path }}/build/ 
        s3://{{ s3_bucket_name }}/ 
        --delete 
        --region ap-northeast-1
      register: s3_sync_result

    - name: Display deployment result
      debug:
        msg: |
          ✅ Frontend deployment completed!
          
          📦 Deployment Details:
          - S3 Bucket: {{ s3_bucket_name }}
          - Frontend URL: {{ frontend_url }}
          - API Gateway URL: {{ api_gateway_url }}
          
          🌐 Access your application at: {{ frontend_url }}
